// service.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: sche.proto

package schedule

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScheduleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelName     string                 `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	OriginPrompt  string                 `protobuf:"bytes,2,opt,name=origin_prompt,json=originPrompt,proto3" json:"origin_prompt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleRequest) Reset() {
	*x = ScheduleRequest{}
	mi := &file_sche_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleRequest) ProtoMessage() {}

func (x *ScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sche_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleRequest.ProtoReflect.Descriptor instead.
func (*ScheduleRequest) Descriptor() ([]byte, []int) {
	return file_sche_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleRequest) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *ScheduleRequest) GetOriginPrompt() string {
	if x != nil {
		return x.OriginPrompt
	}
	return ""
}

type ScheduleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Port          string                 `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleResponse) Reset() {
	*x = ScheduleResponse{}
	mi := &file_sche_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleResponse) ProtoMessage() {}

func (x *ScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sche_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleResponse.ProtoReflect.Descriptor instead.
func (*ScheduleResponse) Descriptor() ([]byte, []int) {
	return file_sche_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScheduleResponse) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *ScheduleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sche_proto protoreflect.FileDescriptor

const file_sche_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"sche.proto\"U\n" +
	"\x0fScheduleRequest\x12\x1d\n" +
	"\n" +
	"model_name\x18\x01 \x01(\tR\tmodelName\x12#\n" +
	"\rorigin_prompt\x18\x02 \x01(\tR\foriginPrompt\"Z\n" +
	"\x10ScheduleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04port\x18\x02 \x01(\tR\x04port\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2H\n" +
	"\x0fScheduleService\x125\n" +
	"\x0eProcessMessage\x12\x10.ScheduleRequest\x1a\x11.ScheduleResponseB\x19Z\x17lightScheduler/scheduleb\x06proto3"

var (
	file_sche_proto_rawDescOnce sync.Once
	file_sche_proto_rawDescData []byte
)

func file_sche_proto_rawDescGZIP() []byte {
	file_sche_proto_rawDescOnce.Do(func() {
		file_sche_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sche_proto_rawDesc), len(file_sche_proto_rawDesc)))
	})
	return file_sche_proto_rawDescData
}

var file_sche_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sche_proto_goTypes = []any{
	(*ScheduleRequest)(nil),  // 0: ScheduleRequest
	(*ScheduleResponse)(nil), // 1: ScheduleResponse
}
var file_sche_proto_depIdxs = []int32{
	0, // 0: ScheduleService.ProcessMessage:input_type -> ScheduleRequest
	1, // 1: ScheduleService.ProcessMessage:output_type -> ScheduleResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sche_proto_init() }
func file_sche_proto_init() {
	if File_sche_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sche_proto_rawDesc), len(file_sche_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sche_proto_goTypes,
		DependencyIndexes: file_sche_proto_depIdxs,
		MessageInfos:      file_sche_proto_msgTypes,
	}.Build()
	File_sche_proto = out.File
	file_sche_proto_goTypes = nil
	file_sche_proto_depIdxs = nil
}
